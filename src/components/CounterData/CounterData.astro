---
import { dataCounter } from "./CounterData.data";
import MotionTransition from "@components/MotionTransition/MotionTransition";
---

<MotionTransition className="container mx-auto px-4 max-w-6xl pt-16 md:pt-24" client:load>
  <div class="justify-evenly md:flex">
    {dataCounter.map(({ endNumber, text, description }) => (
      <div class="py-5 text-4xl md:text-5xl mb-2 md:mb-4 lg:text-6xl text-center tracking-tight leading-none">
        +
        <span class="counter-number font-extrabold text-accent" data-end={endNumber}>0</span>
        <span class="font-extrabold">{text}</span>
        <span class="block text-lg lg:text-xl tracking-normal text-muted">{description}</span>
      </div>
    ))}
  </div>
</MotionTransition>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const counterElements = document.querySelectorAll('.counter-number');
  
  const animateCounter = (element, target) => {
    const duration = 3000; // 3 segundos
    const start = 0;
    const increment = target / (duration / 16); // ~60fps
    
    let current = start;
    const updateCounter = () => {
      current += increment;
      if (current < target) {
        element.textContent = Math.floor(current).toLocaleString();
        requestAnimationFrame(updateCounter);
      } else {
        element.textContent = target.toLocaleString();
      }
    };
    
    updateCounter();
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const target = +entry.target.dataset.end;
        animateCounter(entry.target, target);
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.5 });

  counterElements.forEach(counter => {
    observer.observe(counter);
  });
});
</script>